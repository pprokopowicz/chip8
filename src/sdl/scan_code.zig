const sdl = @cImport({
    @cInclude("SDL3/SDL.h");
    @cInclude("SDL3/SDL_main.h");
});

pub fn scan_code_from(value: u32) ScanCode {
    return @enumFromInt(value);
}

pub const ScanCode = enum(c_int) {
    unknown = sdl.SDL_SCANCODE_UNKNOWN,
    a = sdl.SDL_SCANCODE_A,
    b = sdl.SDL_SCANCODE_B,
    c = sdl.SDL_SCANCODE_C,
    d = sdl.SDL_SCANCODE_D,
    e = sdl.SDL_SCANCODE_E,
    f = sdl.SDL_SCANCODE_F,
    g = sdl.SDL_SCANCODE_G,
    h = sdl.SDL_SCANCODE_H,
    i = sdl.SDL_SCANCODE_I,
    j = sdl.SDL_SCANCODE_J,
    k = sdl.SDL_SCANCODE_K,
    l = sdl.SDL_SCANCODE_L,
    m = sdl.SDL_SCANCODE_M,
    n = sdl.SDL_SCANCODE_N,
    o = sdl.SDL_SCANCODE_O,
    p = sdl.SDL_SCANCODE_P,
    q = sdl.SDL_SCANCODE_Q,
    r = sdl.SDL_SCANCODE_R,
    s = sdl.SDL_SCANCODE_S,
    t = sdl.SDL_SCANCODE_T,
    u = sdl.SDL_SCANCODE_U,
    v = sdl.SDL_SCANCODE_V,
    w = sdl.SDL_SCANCODE_W,
    x = sdl.SDL_SCANCODE_X,
    y = sdl.SDL_SCANCODE_Y,
    z = sdl.SDL_SCANCODE_Z,
    _1 = sdl.SDL_SCANCODE_1,
    _2 = sdl.SDL_SCANCODE_2,
    _3 = sdl.SDL_SCANCODE_3,
    _4 = sdl.SDL_SCANCODE_4,
    _5 = sdl.SDL_SCANCODE_5,
    _6 = sdl.SDL_SCANCODE_6,
    _7 = sdl.SDL_SCANCODE_7,
    _8 = sdl.SDL_SCANCODE_8,
    _9 = sdl.SDL_SCANCODE_9,
    _0 = sdl.SDL_SCANCODE_0,
    _return = sdl.SDL_SCANCODE_RETURN,
    escape = sdl.SDL_SCANCODE_ESCAPE,
    backspace = sdl.SDL_SCANCODE_BACKSPACE,
    tab = sdl.SDL_SCANCODE_TAB,
    space = sdl.SDL_SCANCODE_SPACE,
    minus = sdl.SDL_SCANCODE_MINUS,
    equals = sdl.SDL_SCANCODE_EQUALS,
    leftbracket = sdl.SDL_SCANCODE_LEFTBRACKET,
    rightbracket = sdl.SDL_SCANCODE_RIGHTBRACKET,
    backslash = sdl.SDL_SCANCODE_BACKSLASH,
    nonushash = sdl.SDL_SCANCODE_NONUSHASH,
    semicolon = sdl.SDL_SCANCODE_SEMICOLON,
    apostrophe = sdl.SDL_SCANCODE_APOSTROPHE,
    grave = sdl.SDL_SCANCODE_GRAVE,
    comma = sdl.SDL_SCANCODE_COMMA,
    period = sdl.SDL_SCANCODE_PERIOD,
    slash = sdl.SDL_SCANCODE_SLASH,
    capslock = sdl.SDL_SCANCODE_CAPSLOCK,
    f1 = sdl.SDL_SCANCODE_F1,
    f2 = sdl.SDL_SCANCODE_F2,
    f3 = sdl.SDL_SCANCODE_F3,
    f4 = sdl.SDL_SCANCODE_F4,
    f5 = sdl.SDL_SCANCODE_F5,
    f6 = sdl.SDL_SCANCODE_F6,
    f7 = sdl.SDL_SCANCODE_F7,
    f8 = sdl.SDL_SCANCODE_F8,
    f9 = sdl.SDL_SCANCODE_F9,
    f10 = sdl.SDL_SCANCODE_F10,
    f11 = sdl.SDL_SCANCODE_F11,
    f12 = sdl.SDL_SCANCODE_F12,
    printscreen = sdl.SDL_SCANCODE_PRINTSCREEN,
    scrolllock = sdl.SDL_SCANCODE_SCROLLLOCK,
    pause = sdl.SDL_SCANCODE_PAUSE,
    insert = sdl.SDL_SCANCODE_INSERT,
    home = sdl.SDL_SCANCODE_HOME,
    pageup = sdl.SDL_SCANCODE_PAGEUP,
    delete = sdl.SDL_SCANCODE_DELETE,
    end = sdl.SDL_SCANCODE_END,
    pagedown = sdl.SDL_SCANCODE_PAGEDOWN,
    right = sdl.SDL_SCANCODE_RIGHT,
    left = sdl.SDL_SCANCODE_LEFT,
    down = sdl.SDL_SCANCODE_DOWN,
    up = sdl.SDL_SCANCODE_UP,
    numlockclear = sdl.SDL_SCANCODE_NUMLOCKCLEAR,
    kp_divide = sdl.SDL_SCANCODE_KP_DIVIDE,
    kp_multiply = sdl.SDL_SCANCODE_KP_MULTIPLY,
    kp_minus = sdl.SDL_SCANCODE_KP_MINUS,
    kp_plus = sdl.SDL_SCANCODE_KP_PLUS,
    kp_enter = sdl.SDL_SCANCODE_KP_ENTER,
    kp_1 = sdl.SDL_SCANCODE_KP_1,
    kp_2 = sdl.SDL_SCANCODE_KP_2,
    kp_3 = sdl.SDL_SCANCODE_KP_3,
    kp_4 = sdl.SDL_SCANCODE_KP_4,
    kp_5 = sdl.SDL_SCANCODE_KP_5,
    kp_6 = sdl.SDL_SCANCODE_KP_6,
    kp_7 = sdl.SDL_SCANCODE_KP_7,
    kp_8 = sdl.SDL_SCANCODE_KP_8,
    kp_9 = sdl.SDL_SCANCODE_KP_9,
    kp_0 = sdl.SDL_SCANCODE_KP_0,
    kp_period = sdl.SDL_SCANCODE_KP_PERIOD,
    nonusbackslash = sdl.SDL_SCANCODE_NONUSBACKSLASH,
    application = sdl.SDL_SCANCODE_APPLICATION,
    power = sdl.SDL_SCANCODE_POWER,
    kp_equals = sdl.SDL_SCANCODE_KP_EQUALS,
    f13 = sdl.SDL_SCANCODE_F13,
    f14 = sdl.SDL_SCANCODE_F14,
    f15 = sdl.SDL_SCANCODE_F15,
    f16 = sdl.SDL_SCANCODE_F16,
    f17 = sdl.SDL_SCANCODE_F17,
    f18 = sdl.SDL_SCANCODE_F18,
    f19 = sdl.SDL_SCANCODE_F19,
    f20 = sdl.SDL_SCANCODE_F20,
    f21 = sdl.SDL_SCANCODE_F21,
    f22 = sdl.SDL_SCANCODE_F22,
    f23 = sdl.SDL_SCANCODE_F23,
    f24 = sdl.SDL_SCANCODE_F24,
    execute = sdl.SDL_SCANCODE_EXECUTE,
    help = sdl.SDL_SCANCODE_HELP,
    menu = sdl.SDL_SCANCODE_MENU,
    select = sdl.SDL_SCANCODE_SELECT,
    stop = sdl.SDL_SCANCODE_STOP,
    again = sdl.SDL_SCANCODE_AGAIN,
    undo = sdl.SDL_SCANCODE_UNDO,
    cut = sdl.SDL_SCANCODE_CUT,
    copy = sdl.SDL_SCANCODE_COPY,
    paste = sdl.SDL_SCANCODE_PASTE,
    find = sdl.SDL_SCANCODE_FIND,
    mute = sdl.SDL_SCANCODE_MUTE,
    volumeup = sdl.SDL_SCANCODE_VOLUMEUP,
    volumedown = sdl.SDL_SCANCODE_VOLUMEDOWN,
    kp_comma = sdl.SDL_SCANCODE_KP_COMMA,
    kp_equalsas400 = sdl.SDL_SCANCODE_KP_EQUALSAS400,
    international1 = sdl.SDL_SCANCODE_INTERNATIONAL1,
    international2 = sdl.SDL_SCANCODE_INTERNATIONAL2,
    international3 = sdl.SDL_SCANCODE_INTERNATIONAL3,
    international4 = sdl.SDL_SCANCODE_INTERNATIONAL4,
    international5 = sdl.SDL_SCANCODE_INTERNATIONAL5,
    international6 = sdl.SDL_SCANCODE_INTERNATIONAL6,
    international7 = sdl.SDL_SCANCODE_INTERNATIONAL7,
    international8 = sdl.SDL_SCANCODE_INTERNATIONAL8,
    international9 = sdl.SDL_SCANCODE_INTERNATIONAL9,
    lang1 = sdl.SDL_SCANCODE_LANG1,
    lang2 = sdl.SDL_SCANCODE_LANG2,
    lang3 = sdl.SDL_SCANCODE_LANG3,
    lang4 = sdl.SDL_SCANCODE_LANG4,
    lang5 = sdl.SDL_SCANCODE_LANG5,
    lang6 = sdl.SDL_SCANCODE_LANG6,
    lang7 = sdl.SDL_SCANCODE_LANG7,
    lang8 = sdl.SDL_SCANCODE_LANG8,
    lang9 = sdl.SDL_SCANCODE_LANG9,
    alterase = sdl.SDL_SCANCODE_ALTERASE,
    sysreq = sdl.SDL_SCANCODE_SYSREQ,
    cancel = sdl.SDL_SCANCODE_CANCEL,
    clear = sdl.SDL_SCANCODE_CLEAR,
    prior = sdl.SDL_SCANCODE_PRIOR,
    return2 = sdl.SDL_SCANCODE_RETURN2,
    separator = sdl.SDL_SCANCODE_SEPARATOR,
    out = sdl.SDL_SCANCODE_OUT,
    oper = sdl.SDL_SCANCODE_OPER,
    clearagain = sdl.SDL_SCANCODE_CLEARAGAIN,
    crsel = sdl.SDL_SCANCODE_CRSEL,
    exsel = sdl.SDL_SCANCODE_EXSEL,
    kp_00 = sdl.SDL_SCANCODE_KP_00,
    kp_000 = sdl.SDL_SCANCODE_KP_000,
    thousandsseparator = sdl.SDL_SCANCODE_THOUSANDSSEPARATOR,
    decimalseparator = sdl.SDL_SCANCODE_DECIMALSEPARATOR,
    currencyunit = sdl.SDL_SCANCODE_CURRENCYUNIT,
    currencysubunit = sdl.SDL_SCANCODE_CURRENCYSUBUNIT,
    kp_leftparen = sdl.SDL_SCANCODE_KP_LEFTPAREN,
    kp_rightparen = sdl.SDL_SCANCODE_KP_RIGHTPAREN,
    kp_leftbrace = sdl.SDL_SCANCODE_KP_LEFTBRACE,
    kp_rightbrace = sdl.SDL_SCANCODE_KP_RIGHTBRACE,
    kp_tab = sdl.SDL_SCANCODE_KP_TAB,
    kp_backspace = sdl.SDL_SCANCODE_KP_BACKSPACE,
    kp_a = sdl.SDL_SCANCODE_KP_A,
    kp_b = sdl.SDL_SCANCODE_KP_B,
    kp_c = sdl.SDL_SCANCODE_KP_C,
    kp_d = sdl.SDL_SCANCODE_KP_D,
    kp_e = sdl.SDL_SCANCODE_KP_E,
    kp_f = sdl.SDL_SCANCODE_KP_F,
    kp_xor = sdl.SDL_SCANCODE_KP_XOR,
    kp_power = sdl.SDL_SCANCODE_KP_POWER,
    kp_percent = sdl.SDL_SCANCODE_KP_PERCENT,
    kp_less = sdl.SDL_SCANCODE_KP_LESS,
    kp_greater = sdl.SDL_SCANCODE_KP_GREATER,
    kp_ampersand = sdl.SDL_SCANCODE_KP_AMPERSAND,
    kp_dblampersand = sdl.SDL_SCANCODE_KP_DBLAMPERSAND,
    kp_verticalbar = sdl.SDL_SCANCODE_KP_VERTICALBAR,
    kp_dblverticalbar = sdl.SDL_SCANCODE_KP_DBLVERTICALBAR,
    kp_colon = sdl.SDL_SCANCODE_KP_COLON,
    kp_hash = sdl.SDL_SCANCODE_KP_HASH,
    kp_space = sdl.SDL_SCANCODE_KP_SPACE,
    kp_at = sdl.SDL_SCANCODE_KP_AT,
    kp_exclam = sdl.SDL_SCANCODE_KP_EXCLAM,
    kp_memstore = sdl.SDL_SCANCODE_KP_MEMSTORE,
    kp_memrecall = sdl.SDL_SCANCODE_KP_MEMRECALL,
    kp_memclear = sdl.SDL_SCANCODE_KP_MEMCLEAR,
    kp_memadd = sdl.SDL_SCANCODE_KP_MEMADD,
    kp_memsubtract = sdl.SDL_SCANCODE_KP_MEMSUBTRACT,
    kp_memmultiply = sdl.SDL_SCANCODE_KP_MEMMULTIPLY,
    kp_memdivide = sdl.SDL_SCANCODE_KP_MEMDIVIDE,
    kp_plusminus = sdl.SDL_SCANCODE_KP_PLUSMINUS,
    kp_clear = sdl.SDL_SCANCODE_KP_CLEAR,
    kp_clearentry = sdl.SDL_SCANCODE_KP_CLEARENTRY,
    kp_binary = sdl.SDL_SCANCODE_KP_BINARY,
    kp_octal = sdl.SDL_SCANCODE_KP_OCTAL,
    kp_decimal = sdl.SDL_SCANCODE_KP_DECIMAL,
    kp_hexadecimal = sdl.SDL_SCANCODE_KP_HEXADECIMAL,
    lctrl = sdl.SDL_SCANCODE_LCTRL,
    lshift = sdl.SDL_SCANCODE_LSHIFT,
    lalt = sdl.SDL_SCANCODE_LALT,
    lgui = sdl.SDL_SCANCODE_LGUI,
    rctrl = sdl.SDL_SCANCODE_RCTRL,
    rshift = sdl.SDL_SCANCODE_RSHIFT,
    ralt = sdl.SDL_SCANCODE_RALT,
    rgui = sdl.SDL_SCANCODE_RGUI,
    mode = sdl.SDL_SCANCODE_MODE,
    sleep = sdl.SDL_SCANCODE_SLEEP,
    wake = sdl.SDL_SCANCODE_WAKE,
    channel_increment = sdl.SDL_SCANCODE_CHANNEL_INCREMENT,
    channel_decrement = sdl.SDL_SCANCODE_CHANNEL_DECREMENT,
    media_play = sdl.SDL_SCANCODE_MEDIA_PLAY,
    media_pause = sdl.SDL_SCANCODE_MEDIA_PAUSE,
    media_record = sdl.SDL_SCANCODE_MEDIA_RECORD,
    media_fast_forward = sdl.SDL_SCANCODE_MEDIA_FAST_FORWARD,
    media_rewind = sdl.SDL_SCANCODE_MEDIA_REWIND,
    media_next_track = sdl.SDL_SCANCODE_MEDIA_NEXT_TRACK,
    media_previous_track = sdl.SDL_SCANCODE_MEDIA_PREVIOUS_TRACK,
    media_stop = sdl.SDL_SCANCODE_MEDIA_STOP,
    media_eject = sdl.SDL_SCANCODE_MEDIA_EJECT,
    media_play_pause = sdl.SDL_SCANCODE_MEDIA_PLAY_PAUSE,
    media_select = sdl.SDL_SCANCODE_MEDIA_SELECT,
    ac_new = sdl.SDL_SCANCODE_AC_NEW,
    ac_open = sdl.SDL_SCANCODE_AC_OPEN,
    ac_close = sdl.SDL_SCANCODE_AC_CLOSE,
    ac_exit = sdl.SDL_SCANCODE_AC_EXIT,
    ac_save = sdl.SDL_SCANCODE_AC_SAVE,
    ac_print = sdl.SDL_SCANCODE_AC_PRINT,
    ac_properties = sdl.SDL_SCANCODE_AC_PROPERTIES,
    ac_search = sdl.SDL_SCANCODE_AC_SEARCH,
    ac_home = sdl.SDL_SCANCODE_AC_HOME,
    ac_back = sdl.SDL_SCANCODE_AC_BACK,
    ac_forward = sdl.SDL_SCANCODE_AC_FORWARD,
    ac_stop = sdl.SDL_SCANCODE_AC_STOP,
    ac_refresh = sdl.SDL_SCANCODE_AC_REFRESH,
    ac_bookmarks = sdl.SDL_SCANCODE_AC_BOOKMARKS,
    softleft = sdl.SDL_SCANCODE_SOFTLEFT,
    softright = sdl.SDL_SCANCODE_SOFTRIGHT,
    call = sdl.SDL_SCANCODE_CALL,
    endcall = sdl.SDL_SCANCODE_ENDCALL,
    reserved = sdl.SDL_SCANCODE_RESERVED,
    count = sdl.SDL_SCANCODE_COUNT,
    _,
};
